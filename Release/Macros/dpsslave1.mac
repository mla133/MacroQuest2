||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|
|  DPS Caster - Slave macro
|   This macro will follow around the main assist and attack the MAs target
|   When the MA says Attack in group chat. When the MA says Burn in group chat
|       the caster will unload his max DPS rotation
|   Requires the following:
|   Turn your autoassist off /assist off
|   /assist group to Hotkey 3
|   A light spell rotation to hotkey 2
|   A burn rotation to hotkey 4
|   /target yourMA (Change yourMA to his actual name) to Hotkey 5 
|   
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
#chat group
#event Burn "#*#tells the group, 'Burn#*#"
#event Med "#*#tells the group, 'Med break#*#"
#event Fight "#*# gain party#*#"
#event We_Died "#*#entered The Plane of Knowledge#*#"
#event Check_Damage "#*# hits YOU for#*#"
#event Check_Damage "#*# mauls YOU for#*#"
#event Check_Damage "#*# bashes YOU for#*#"
#event Exp "You gain#*#experience#*#"
#event Main_Tank "#*#Main tank is #1#"
#event Have_Released "#*#Bind Location#*#"

Sub Main
   /declare AmMelee int outer ${Param0}
   /declare PrctExp float outer
   /declare Exper float outer
   /declare Exper1 float outer
   /declare Exper2 float outer
   /declare Expstart float outer
   /varset PrctExp 0
   /varset Exper ${Me.PctExp}
   /varset Exper1 0
   /varset Exper2 0
   /varset Expstart ${Me.Exp}
   /declare AlertTank string outer FALSE
   /declare UnderAttack string outer FALSE
   /if (!${AmMelee}==1) /varset AmMelee 0
   :MainLoop
      /call FollowMA
      /call CheckCombat
      /if (${UnderAttack.Equal[FALSE]}) /doevents
      /if (${UnderAttack.Equal[TRUE]}) /call Combat
      /if (${UnderAttack.Equal[FALSE]}) /call CheckMana
      /delay 2s
      /doevents
      /goto :MainLoop
/return

Sub Logging
   /gsay Guys I got to log.
   /delay 2s
   /camp
   /endmac
/return

Sub Event_Have_Released
   /declare GotRez int local 0
   /delay 300s ${Window[ConfirmationDialogBox].Open}
   /delay 1s
   /if (${Window[ConfirmationDialogBox].Open}) /notify ConfirmationDialogBox Yes_Button leftmouseup
   /delay 2s
   /if (${Window[RespawnWnd].Open}) {
      /nomodkey /notify RespawnWnd RW_OptionsList listselect 2
      /varset GotRez 1
      /delay 1s
      /nomodkey /notify RespawnWnd RW_SelectButton leftmouseup
      /delay 2s
   }
   /if (${GotRez}==0) {
      /gsay Got to log guys sorry. See ya
      /camp
      /delay 1s
      /endmac
   }
/return

Sub Wait4Rez
   /declare i int local
   /varset i 1
   :rezwait
|   /varcalc i ${i}+1
   /if (!${Window[ConfirmationDialogBox].Open}) {
         /delay 5s ${Window[ConfirmationDialogBox].Open}
|         /if (${i}<=80) /goto :rezwait
         /doevents Have_Released
         /goto :rezwait
      }
   /if (${Window[ConfirmationDialogBox].Open}) /notify ConfirmationDialogBox Yes_Button leftmouseup
   /delay 2s
   /if (${Window[RespawnWnd].Open}) /nomodkey /notify RespawnWnd RW_OptionsList listselect 2  
   /delay 1s
   /nomodkey /notify RespawnWnd RW_SelectButton leftmouseup
   /delay 2s
/return

Sub DeathCheck
   /if (${Me.State.Equal[HOVER]}) {
      /gsay I died, Waiting for rez plz
      /call Wait4Rez
   }
/return

Sub GetCombatTarget
   :aquiretargetloop
   /assist ${Group.MainAssist}
   /delay 2s
   /if (!${Target.ID} || ${Target.Type.Equal[corpse]} || ${Target.Type.Equal[group]}) {
      /squelch /target clear
      /delay 1s
      /if (${Me.XTarget}>0) /goto :aquiretargetloop
   }
/return

Sub Event_Exp
   /declare RunTime int local
   /declare RunTime1 float local
   /varset RunTime1 0
   /varcalc RunTime ${Macro.RunTime}/60
| Exper = XP from last Kill
   /varcalc Exper ${Me.Exp}-${Exper}
| Exper2 is running total of XP gained since start
   /varcalc Exper2 ${Exper2}+${Exper}
| PrctExp is the Percent left to level
   /varcalc PrctExp 100-${Me.PctExp}
   /varcalc RunTime1 ${RunTime}/60
   /if (${RunTime1}<.01) /varset RunTime1 .01
|Exper1 is Approx XP per hour
   /varcalc Exper1 ${Exper2}/${RunTime1}
   /echo [Last Kill]: ${Exper} [Total EXP]: ${Exper2} in [${RunTime}] Minutes...
   /echo [%EXP to level]: ${PrctExp}%   [Exp per hr]: ${Exper1}
/return

Sub Event_Check_Damage
   /gsay ${Target.CleanName} is attacking me!! Get it off!
   /if (${AmMelee}==0) /call MoveBack
   /doevents flush Check_Damage
   /call CheckCombat
/return

Sub CheckCombat
   /call DeathCheck
   /if (${Me.XTarget}>0) {
      /varset UnderAttack TRUE
      /if (${Target.Type.Equal[group]}) /squelch /target clear
      /if (${Me.Sitting}) /stand
      /if (!${Target.ID} || ${Target.Type.Equal[corpse]}) /call GetCombatTarget   
      /return
   }
   /varset UnderAttack FALSE
/return

Sub CheckMana
   /if (${Me.PctMana}<80) /call MedBreak
   /return

Sub ApproachTarget
   /if (${Target.Distance}>10) {
      /face fast nolook
      /keypress forward hold
      :moveloop
      /if (${Target.ID}) /face fast nolook
      /if (${Target.Distance}>10) /goto :moveloop
      /keypress forward
   } 
/return

Sub Combat
   /declare i int local
   /varset i 1
   :waitfortankloop
      /doevents Check_Damage
      /delay 2s
      /varcalc i ${i}+1
      /if (${i}<1) /goto :waitfortankloop
   /assist ${Group.MainAssist}
   /keypress forward
   /keypress 3
   /delay 1s
   :combatloop
      /call CheckCombat
      /if (!${Target.ID} && ${UnderAttack.Equal[TRUE]}) /goto :combatloop
      /assist ${Group.MainAssist}
      /if (${UnderAttack.Equal[FALSE]}) /goto :endcombat
      /if (${Target.ID} && ${AmMelee}==0) {
         /face fast nolook
         :finishcastloop
            /if (!${Me.Casting.ID}) {
               /nomodkey /keypress 2
               /varset i 1 
               :beingattacked
                  /Call CheckCombat
                  /if (${UnderAttack.Equal[FALSE]}) /goto :endcombat
                  /if (${i}<2) {
                     /varcalc i ${i}+1
                     /delay 3s
                     /doevents Check_Damage
                     /assist ${Group.MainAssist}
                     /keypress 3
                     /delay 1s
                     /goto :beingattacked
                  }
               /squelch /target clear
               /keypress 3
               /delay 1s
               /goto :combatloop
            }
         /delay 2s
         /goto :finishcastloop
      }
      /if (${Target.ID} && ${AmMelee}==1) {
         /assist ${Group.MainAssist}
         /delay 2s
         /call ApproachTarget
         /stick behind
         /delay 2s
         /attack on
         /delay 1s  
         /call CheckCombat
         /assist ${Group.MainAssist}
         /delay 1s
         /keypress 2
         /delay 20s
         /goto :combatloop         
      }
   :endcombat
   /doevents Exp
/return

Sub MoveBack
|   /face fast
|   /keypress back hold
|   /delay 2s
|   /keypress back
|   /squelch /target clear 
|   /delay 3s
/return

Sub FollowMA
   /keypress 5  
   /delay 1s
   :FollowLoop
      /face fast
      /if (${Target.Distance}>30) /keypress up hold
      /if (${Target.Distance}<20) {
         /keypress up
         /return
      }
      /goto :FollowLoop
/return

Sub Event_We_Died
   /gsay Logging
   /camp
   /endmac
/return

Sub MedBreak
   /call FollowMA
   /keypress 9
   :medloop
   /keypress 5
   /delay 1s
   /if (${Target.Distance}>30) /call FollowMA
   /call CheckCombat
   /if (${UnderAttack.Equal[TRUE]}) /return
   /if (!${Me.Sitting}) /sit
   /delay 3s
   /if (${Me.PctMana}<95) /goto :medloop
/return